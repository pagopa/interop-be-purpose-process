include "kamon"

akka {
  loglevel = "DEBUG"
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  management {
    http {
      hostname = "0.0.0.0"
      bind-hostname = 0.0.0.0
      route-providers-read-only = false
    }
    health-checks {
      readiness-checks {
        ready = "it.pagopa.interop.purposeprocess.server.impl.HealthCheck"
      }
      liveness-checks {
        live = "it.pagopa.interop.purposeprocess.server.impl.LiveCheck"
      }
    }
  }
}

purpose-process {
  port = 8088
  jwt {
    audience = [ ${MAIN_AUDIENCE} ]
  }
  storage {
    container = "container"
    risk-analysis-path = "target/risk-analysis/docs"
  }
  services {
    agreement-management     = "http://localhost:8086/agreement-management/0.1"
    authorization-management = "http://localhost:8086/authorization-management/0.1"
    catalog-management       = "http://localhost:8087/catalog-management/0.1"
    party-management         = "http://localhost:8085/party-management/0.1"
    purpose-management       = "http://localhost:8089/purpose-management/0.1"
  }
}

interop-commons {
  jwt {
    public-keys {
      url = ${WELL_KNOWN_URL}
    }
  }

  storage {
    type = "File"
    endpoint = "local"
    application {
      id = "local"
      secret = "local"
    }
  }
}
