openapi: 3.0.3
info:
  title: Purpose Process Micro Service
  description: Offers operations to retrieve purpose data
  version: '{{version}}'
  contact:
    name: API Support
    url: 'http://www.example.com/support'
    email: support@example.com
  termsOfService: 'http://swagger.io/terms/'
  x-api-id: an x-api-id
  x-summary: an x-summary
servers:
  - url: '/purpose-process/{{version}}'
    description: This service is the purpose process
security:
  - bearerAuth: []
tags:
  - name: purpose
    description: Implements purpose process
    externalDocs:
      description: Find out more
      url: 'http://swagger.io'
  - name: health
    description: Verify service status
    externalDocs:
      description: Find out more
      url: 'http://swagger.io'
paths:
  /purposes:
    parameters:
      - $ref: '#/components/parameters/CorrelationIdHeader'
      - $ref: '#/components/parameters/IpAddress'
    get:
      tags:
        - purpose
      operationId: getPurposes
      description: Retrieve Purposes
      parameters:
        - in: query
          name: name
          schema:
            type: string
        - in: query
          name: eservicesIds
          description: comma separated sequence of EService IDs
          schema:
            type: array
            items:
              type: string
              format: uuid
            default: []
          explode: false
        - in: query
          name: consumersIds
          description: comma separated sequence of consumers IDs
          schema:
            type: array
            items:
              type: string
              format: uuid
            default: []
          explode: false
        - in: query
          name: producersIds
          description: comma separated sequence of producers IDs
          schema:
            type: array
            items:
              type: string
              format: uuid
            default: []
          explode: false
        - in: query
          name: states
          description: comma separated sequence of states
          schema:
            type: array
            items:
              $ref: '#/components/schemas/PurposeVersionState'
            default: []
          explode: false
        - in: query
          name: excludeDraft
          schema:
            type: boolean
            default: false
        - in: query
          name: offset
          required: true
          schema:
            type: integer
            format: int32
            minimum: 0
        - in: query
          name: limit
          required: true
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 50
      responses:
        '200':
          description: Purposes requested
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Purposes'
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
    post:
      tags:
        - purpose
      operationId: createPurpose
      description: Creates the Purpose
      responses:
        '200':
          description: Purpose created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Purpose'
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'        
        '409':
          description: Name Conflict
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PurposeSeed'
        required: true
  /reverse/purposes:
    parameters:
      - $ref: '#/components/parameters/CorrelationIdHeader'
      - $ref: '#/components/parameters/IpAddress'
    post:
      parameters:
        - $ref: '#/components/parameters/CorrelationIdHeader'
        - $ref: '#/components/parameters/IpAddress'
      tags:
        - purpose
      operationId: createPurposeFromEService
      description: Create a Purpose for EService with Receive mode
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EServicePurposeSeed'
        required: true
      responses:
        '200':
          description: Purpose created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Purpose'
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '409':
          description: Conflict
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'                       
  /reverse/purposes/{id}:
    parameters:
      - $ref: '#/components/parameters/CorrelationIdHeader'
      - $ref: '#/components/parameters/IpAddress'
      - name: id
        in: path
        description: the purpose id
        required: true
        schema:
          type: string
          format: uuid
    post:
      parameters:
        - $ref: '#/components/parameters/CorrelationIdHeader'
        - $ref: '#/components/parameters/IpAddress'
      tags:
        - purpose
      operationId: updateReversePurpose
      description: Updates a Purpose of an EService
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReversePurposeUpdateContent'
        required: true
      responses:
        '200':
          description: Purpose updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Purpose'
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
  /purposes/{id}:
    parameters:
      - $ref: '#/components/parameters/CorrelationIdHeader'
      - $ref: '#/components/parameters/IpAddress'
      - name: id
        in: path
        description: the purpose id
        required: true
        schema:
          type: string
          format: uuid
    get:
      tags:
        - purpose
      operationId: getPurpose
      description: Retrieve the Purpose
      responses:
        '200':
          description: Purpose requested
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Purpose'
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '404':
          description: Purpose Not Found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
    post:
      parameters:
        - $ref: '#/components/parameters/CorrelationIdHeader'
        - $ref: '#/components/parameters/IpAddress'
      tags:
        - purpose
      operationId: updatePurpose
      description: Updates a Purpose if not yet activated
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PurposeUpdateContent'
        required: true
      responses:
        '200':
          description: Purpose updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Purpose'
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
    delete:
      parameters:
        - $ref: '#/components/parameters/CorrelationIdHeader'
        - $ref: '#/components/parameters/IpAddress'
      tags:
        - purpose
      operationId: deletePurpose
      description: Deletes a specific purpose if there are no version or just a draft version
      responses:
        '204':
          description: Purpose deleted
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '403':
          description: Purpose has at least one version that is not in draft state or more than one version
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '404':
          description: Purpose Not Found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
  /purposes/{purposeId}/versions:
    parameters:
      - $ref: '#/components/parameters/CorrelationIdHeader'
      - $ref: '#/components/parameters/IpAddress'
      - name: purposeId
        in: path
        description: the purpose id
        required: true
        schema:
          type: string
          format: uuid
    post:
      tags:
        - purpose
      operationId: createPurposeVersion
      description: Creates a draft Purpose Version
      responses:
        '200':
          description: Purpose created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PurposeVersion'
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PurposeVersionSeed'
        required: true
  /purposes/{purposeId}/versions/{versionId}:
    parameters:
      - $ref: '#/components/parameters/CorrelationIdHeader'
      - $ref: '#/components/parameters/IpAddress'
      - name: purposeId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      - name: versionId
        in: path
        required: true
        schema:
          type: string
          format: uuid
    delete:
      summary: Delete a Purpose Version
      operationId: deletePurposeVersion
      responses:
        '204':
          description: Purpose Version Deleted
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '404':
          description: Purpose Not Found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
      tags:
        - purpose
      description: deletes the purpose version by id
  /purposes/{purposeId}/versions/{versionId}/documents/{documentId}:
    parameters:
      - $ref: '#/components/parameters/CorrelationIdHeader'
      - $ref: '#/components/parameters/IpAddress'
    get:
      security:
        - bearerAuth: []
      tags:
        - purpose
      summary: Get an Risk Analysis document
      operationId: getRiskAnalysisDocument
      parameters:
        - name: purposeId
          in: path
          description: the purpose id
          required: true
          schema:
            type: string
        - name: versionId
          in: path
          description: the version Id
          required: true
          schema:
            type: string
        - name: documentId
          in: path
          description: the document id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Risk Analysis document retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PurposeVersionDocument'
        '404':
          description: Resource not found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '400':
          description: Bad request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
  /status:
    get:
      security: []
      tags:
        - health
      summary: Health status endpoint
      description: Return ok
      operationId: getStatus
      responses:
        '200':
          description: successful operation
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
  /purposes/{purposeId}/versions/{versionId}/activate:
    parameters:
      - $ref: '#/components/parameters/CorrelationIdHeader'
      - $ref: '#/components/parameters/IpAddress'
      - name: purposeId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      - name: versionId
        in: path
        required: true
        schema:
          type: string
          format: uuid
    post:
      summary: Activate Purpose Version
      operationId: activatePurposeVersion
      responses:
        '200':
          description: Purpose Version Activated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PurposeVersion'
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '404':
          description: Purpose Not Found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
      tags:
        - purpose
      description: activates the purpose version by id
  /purposes/{purposeId}/clone:
    parameters:
      - $ref: '#/components/parameters/CorrelationIdHeader'
      - $ref: '#/components/parameters/IpAddress'
      - name: purposeId
        in: path
        required: true
        schema:
          type: string
          format: uuid
    post:
      summary: Clone Purpose
      operationId: clonePurpose
      responses:
        '200':
          description: Purpose Cloned
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Purpose'
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '404':
          description: Purpose Not Found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '409':
          description: Purpose cannot be cloned
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
      tags:
        - purpose
      description: clone purpose 
  /purposes/{purposeId}/versions/{versionId}/suspend:
    parameters:
      - $ref: '#/components/parameters/CorrelationIdHeader'
      - $ref: '#/components/parameters/IpAddress'
      - name: purposeId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      - name: versionId
        in: path
        required: true
        schema:
          type: string
          format: uuid
    post:
      summary: Suspend Purpose Version
      operationId: suspendPurposeVersion
      responses:
        '200':
          description: Purpose Version Suspended
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PurposeVersion'
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '404':
          description: Purpose Not Found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
      tags:
        - purpose
      description: suspends the purpose version by id
  /purposes/{purposeId}/versions/{versionId}/archive:
    parameters:
      - $ref: '#/components/parameters/CorrelationIdHeader'
      - $ref: '#/components/parameters/IpAddress'
      - name: purposeId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      - name: versionId
        in: path
        required: true
        schema:
          type: string
          format: uuid
    post:
      summary: Archive Purpose Version
      operationId: archivePurposeVersion
      responses:
        '200':
          description: Purpose Version Archived
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PurposeVersion'
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '404':
          description: Purpose Not Found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
      tags:
        - purpose
      description: archives the purpose version by id
  /purposes/{purposeId}/versions/{versionId}/update/waitingForApproval:
    parameters:
      - $ref: '#/components/parameters/CorrelationIdHeader'
      - $ref: '#/components/parameters/IpAddress'
      - name: purposeId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      - name: versionId
        in: path
        required: true
        schema:
          type: string
          format: uuid
    post:
      tags:
        - purpose
      summary: Update a purpose version in waiting for approval
      operationId: updateWaitingForApprovalPurposeVersion
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WaitingForApprovalPurposeVersionUpdateContent'
        required: true
      responses:
        '200':
          description: Purpose Version updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PurposeVersion'
        '400':
          description: Invalid input
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '403':
          description: Purpose version not in waiting for approval state or the organization is not a producer
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '404':
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
  /purposes/riskAnalysis/latest:
    parameters:
      - $ref: '#/components/parameters/CorrelationIdHeader'
      - $ref: '#/components/parameters/IpAddress'
      - name: tenantKind
        in: query
        schema:
          $ref: '#/components/schemas/TenantKind'
    get:
      tags:
        - purpose
      operationId: retrieveLatestRiskAnalysisConfiguration
      description: Retrieve latest risk analysis configuration
      responses:
        '200':
          description: Risk analysis requested
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RiskAnalysisFormConfigResponse'
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '404':
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'        
  /purposes/riskAnalysis/version/{riskAnalysisVersion}:
    parameters:
      - $ref: '#/components/parameters/CorrelationIdHeader'
      - $ref: '#/components/parameters/IpAddress'
      - name: riskAnalysisVersion
        in: path
        required: true
        schema:
          type: string
      - name: tenantKind
        in: query
        schema:
          $ref: '#/components/schemas/TenantKind'
    get:
      tags:
        - purpose
      operationId: retrieveRiskAnalysisConfigurationByVersion
      description: Retrieve a specified version of risk analysis configuration
      responses:
        '200':
          description: Risk analysis requested
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RiskAnalysisFormConfigResponse'
        '400':
          description: Bad Request
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '404':
          description: Not Found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'         
components:
  parameters:
    CorrelationIdHeader:
      in: header
      name: X-Correlation-Id
      required: true
      schema:
        type: string
    IpAddress:
      in: header
      name: X-Forwarded-For
      schema:
        type: string
  schemas:
    TenantKind:
      type: string
      description: Tenant Kind
      enum:
        - PA
        - PRIVATE
        - GSP
    RiskAnalysisFormConfigResponse:
      type: object
      properties:
        version: 
          type: string
        questions: 
          type: array
          items:
            $ref: '#/components/schemas/FormConfigQuestionResponse'
      required:
        - version
        - questions 
    FormConfigQuestionResponse:
      type: object
      properties:
        id:
          type: string
        label: 
          $ref: '#/components/schemas/LocalizedTextResponse'
        infoLabel: 
          $ref: '#/components/schemas/LocalizedTextResponse'
        dataType: 
          $ref: '#/components/schemas/DataTypeResponse'
        required:
          type: boolean
        dependencies: 
          type: array
          items:
            $ref: '#/components/schemas/DependencyResponse'
        visualType:
          type: string
        defaultValue:
          type: array
          items:
            type: string
        hideOption:
          type: object
          additionalProperties:
            type: array
            items:
              $ref: '#/components/schemas/HideOptionResponse'
        validation:
          $ref: '#/components/schemas/ValidationOptionResponse'                
        options:
          type: array
          items:
            $ref: '#/components/schemas/LabeledValueResponse'
      required:
        - id
        - label
        - dataType
        - required
        - dependencies
        - visualType
        - defaultValue
    ValidationOptionResponse:
        type: object
        properties:
          maxLength:
            type: integer
            format: int32
    HideOptionResponse:
        type: object
        properties:
          id:
            type: string
          value:
            type: string
        required:
          - id
          - value    
    LabeledValueResponse:
      type: object
      properties:
        label:
          $ref: '#/components/schemas/LocalizedTextResponse'
        value:
          type: string
      required:
        - label
        - value  
    LocalizedTextResponse:
      type: object
      properties:
        it:
          type: string
        en:
          type: string
      required:
        - it
        - en
    DataTypeResponse:
      type: string
      description: Data Type Question
      enum:
        - SINGLE
        - MULTI
        - FREETEXT
    DependencyResponse:
      type: object
      properties:
        id:
          type: string
        value:
          type: string
      required:
        - id
        - value
    Agreement:
      type: object
      properties:
        id:
          type: string
          format: uuid
        state:
          $ref: '#/components/schemas/AgreementState'
      required:
        - id
        - state
    AgreementState:
      type: string
      description: Agreement State
      enum:
        - DRAFT
        - ACTIVE
        - PENDING
        - SUSPENDED
        - ARCHIVED
        - MISSING_CERTIFIED_ATTRIBUTES
        - REJECTED
    Client:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
      required:
        - id
        - name
    Clients:
      type: array
      items:
        $ref: '#/components/schemas/Client'
    EService:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        producer:
          $ref: '#/components/schemas/Organization'
        descriptor:
          $ref: '#/components/schemas/EServiceDescriptor'
      required:
        - id
        - name
        - producer
        - descriptor
    EServiceDescriptor:
      type: object
      properties:
        id:
          type: string
          format: uuid
        version:
          type: string
        dailyCalls:
          type: integer
          format: int32
        state:
          $ref: '#/components/schemas/EServiceDescriptorState'
      required:
        - id
        - version
        - dailyCalls
        - state
    EServiceDescriptorState:
      type: string
      description: EService Descriptor State
      enum:
        - DRAFT
        - PUBLISHED
        - DEPRECATED
        - SUSPENDED
        - ARCHIVED
    Organization:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
      required:
        - id
        - name
    Purpose:
      type: object
      properties:
        id:
          type: string
          format: uuid
        eserviceId:
          type: string
          format: uuid
        consumerId:
          type: string
          format: uuid
        versions:
          type: array
          items:
            $ref: '#/components/schemas/PurposeVersion'
        suspendedByConsumer:
          type: boolean
        suspendedByProducer:
          type: boolean
        title:
          type: string
        description:
          type: string
        riskAnalysisForm:
          $ref: '#/components/schemas/RiskAnalysisForm'
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        isRiskAnalysisValid:
          type: boolean
        isFreeOfCharge:
          type: boolean
        freeOfChargeReason:
          type: string  
      required:
        - id
        - eserviceId
        - consumerId
        - versions
        - title
        - description
        - createdAt
        - isRiskAnalysisValid
        - isFreeOfCharge
      description: business representation of a purpose
    Purposes:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/Purpose'
        totalCount:
          type: integer
          format: int32
      required:
        - results
        - totalCount
    PurposeUpdateContent:
      type: object
      description: contains the expected payload for purpose update.
      properties:
        title:
          type: string
          minLength: 5
          maxLength: 60
        description:
          type: string
          minLength: 10
          maxLength: 250
        isFreeOfCharge:
          type: boolean
        freeOfChargeReason:
          type: string    
        riskAnalysisForm:
          $ref: '#/components/schemas/RiskAnalysisForm'
        dailyCalls:
          description: 'maximum number of daily calls that this version can perform.'
          type: integer
          format: int32
          minimum: 0
      required:
        - title
        - description
        - isFreeOfCharge
        - dailyCalls
    ReversePurposeUpdateContent:
      type: object
      description: contains the expected payload for purpose update.
      properties:
        title:
          type: string
          minLength: 5
          maxLength: 60
        description:
          type: string
          minLength: 10
          maxLength: 250
        isFreeOfCharge:
          type: boolean
        freeOfChargeReason:
          type: string
        dailyCalls:
          description: 'maximum number of daily calls that this version can perform.'
          type: integer
          format: int32
          minimum: 0
      required:
        - title
        - description
        - isFreeOfCharge
        - dailyCalls
    WaitingForApprovalPurposeVersionUpdateContent:
      type: object
      description: contains the expected payload for purpose version update.
      properties:
        expectedApprovalDate:
          description: 'Estimated expected approval date for a purpose version'
          type: string
          format: date-time
      required:
        - expectedApprovalDate
    PurposeVersion:
      type: object
      properties:
        id:
          type: string
          format: uuid
        state:
          $ref: '#/components/schemas/PurposeVersionState'
        createdAt:
          type: string
          format: date-time
        suspendedAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        firstActivationAt:
          type: string
          format: date-time
        expectedApprovalDate:
          type: string
          format: date-time
        dailyCalls:
          description: 'maximum number of daily calls that this version can perform.'
          type: integer
          format: int32
          minimum: 0
        riskAnalysis:
          $ref: '#/components/schemas/PurposeVersionDocument'
      required:
        - id
        - state
        - dailyCalls
        - createdAt
      description: business representation of a purpose version
    PurposeVersionState:
      type: string
      description: Purpose State
      enum:
        - ACTIVE
        - DRAFT
        - SUSPENDED
        - WAITING_FOR_APPROVAL
        - ARCHIVED
    PurposeVersionDocument:
      type: object
      required:
        - id
        - contentType
        - path
        - createdAt
      properties:
        id:
          type: string
          format: uuid
        contentType:
          type: string
        path:
          type: string
        createdAt:
          type: string
          format: date-time
    EServicePurposeSeed:
      type: object
      description: contains the expected payload for purpose creation.
      properties:
        eServiceId:
          type: string
          format: uuid      
        consumerId:
          type: string
          format: uuid
        riskAnalysisId:
          type: string
          format: uuid  
        title:
          type: string
          minLength: 5
          maxLength: 60
        description:
          type: string
          minLength: 10
          maxLength: 250
        isFreeOfCharge:
          type: boolean
        freeOfChargeReason:
          type: string
        dailyCalls:
          type: integer
          format: int32
      required:
        - eServiceId
        - consumerId
        - title
        - riskAnalysisId
        - description
        - isFreeOfCharge
        - dailyCalls      
    PurposeSeed:
      type: object
      description: contains the expected payload for purpose creation.
      properties:
        eserviceId:
          type: string
          format: uuid
        consumerId:
          type: string
          format: uuid
        riskAnalysisForm:
          $ref: '#/components/schemas/RiskAnalysisForm'
        title:
          type: string
          minLength: 5
          maxLength: 60
        description:
          type: string
          minLength: 10
          maxLength: 250
        isFreeOfCharge:
          type: boolean
        freeOfChargeReason:
          type: string
        dailyCalls:
          type: integer
          format: int32
      required:
        - eserviceId
        - consumerId
        - title
        - description
        - isFreeOfCharge
        - dailyCalls
    PurposeVersionSeed:
      type: object
      description: contains the expected payload for purpose version creation.
      required:
        - dailyCalls
      properties:
        dailyCalls:
          description: 'maximum number of daily calls that this version can perform.'
          type: integer
          format: int32
          minimum: 0
    RiskAnalysisForm:
      type: object
      properties:
        version:
          type: string
          minLength: 1
          maxLength: 250
        answers:
          additionalProperties:
            type: array
            items:
              type: string
              minLength: 1
              maxLength: 250
        riskAnalysisId:
            type: string
            format: uuid
      required:
        - version
        - answers
    Problem:
      properties:
        type:
          description: URI reference of type definition
          type: string
        status:
          description: The HTTP status code generated by the origin server for this occurrence of the problem.
          example: 503
          exclusiveMaximum: true
          format: int32
          maximum: 600
          minimum: 100
          type: integer
        title:
          description: A short, summary of the problem type. Written in english and readable
          example: Service Unavailable
          maxLength: 64
          pattern: '^[ -~]{0,64}$'
          type: string
        correlationId:
          description: Unique identifier of the request
          example: '53af4f2d-0c87-41ef-a645-b726a821852b'
          maxLength: 64
          type: string
        detail:
          description: A human readable explanation of the problem.
          example: Request took too long to complete.
          maxLength: 4096
          pattern: '^.{0,1024}$'
          type: string
        errors:
          type: array
          minItems: 1
          items:
            $ref: '#/components/schemas/ProblemError'
      additionalProperties: false
      required:
        - type
        - status
        - title
        - errors
    ProblemError:
      properties:
        code:
          description: Internal code of the error
          example: 123-4567
          minLength: 8
          maxLength: 8
          pattern: '^[0-9]{3}-[0-9]{4}$'
          type: string
        detail:
          description: A human readable explanation specific to this occurrence of the problem.
          example: Parameter not valid
          maxLength: 4096
          pattern: '^.{0,1024}$'
          type: string
      required:
        - code
        - detail
  securitySchemes:
    bearerAuth:
      type: http
      description: 'A bearer token in the format of a JWS and conformed to the specifications included in [RFC8725](https://tools.ietf.org/html/RFC8725).'
      scheme: bearer
      bearerFormat: JWT
