include "kamon"

akka {
  stdout-loglevel = "OFF"
  loglevel = "DEBUG"
  use-slf4j = on
  coordinated-shutdown.exit-jvm = on
  coordinated-shutdown.terminate-actor-system = on
  coordinated-shutdown.run-by-actor-system-terminate = on
  coordinated-shutdown.run-by-jvm-shutdown-hook = on
  management {
    http {
      hostname = "0.0.0.0"
      bind-hostname = 0.0.0.0
      route-providers-read-only = false
    }
    health-checks {
      readiness-checks {
        ready = "it.pagopa.interop.purposeprocess.server.impl.HealthCheck"
      }
      liveness-checks {
        live = "it.pagopa.interop.purposeprocess.server.impl.LiveCheck"
      }
    }
  }
}


purpose-process {
  port = 8088
  jwt {
    audience = ${ACCEPTED_AUDIENCES}
  }
  storage {
    container = ${STORAGE_CONTAINER}
    risk-analysis-path = "risk-analysis/docs"
    risk-analysis-path = ${?RISK_ANALYSIS_DOCS_PATH}
  }
  services {
    agreement-management     = ${AGREEMENT_MANAGEMENT_URL}
    authorization-management = ${AUTHORIZATION_MANAGEMENT_URL}
    catalog-management       = ${CATALOG_MANAGEMENT_URL}
    party-management         = ${PARTY_MANAGEMENT_URL}
    purpose-management       = ${PURPOSE_MANAGEMENT_URL}
  }
}

interop-commons {
  jwt {
    public-keys {
      url = ${WELL_KNOWN_URL}
    }
  }

  storage {
    type = ${STORAGE_TYPE}
    endpoint = ${STORAGE_ENDPOINT}
    application {
      id = ${STORAGE_CREDENTIAL_ID}
      secret = ${STORAGE_CREDENTIAL_SECRET}
    }
  }
}
